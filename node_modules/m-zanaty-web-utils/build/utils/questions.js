"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const { bold, green } = chalk_1.default;
const questions = [
    {
        type: 'confirm',
        message: `${bold('Sir')}, ${green('Do you need Node with TypeScript Starter Combo ⁉️')}`,
        default: true,
        name: 'isCombo'
    },
    {
        type: 'confirm',
        message: `${bold('Sir')}, ${green('Do you need prettier ⁉️')}`,
        default: true,
        name: 'isUsingPrettier',
        when: (answers) => !answers.isCombo
    },
    {
        type: 'confirm',
        message: `${bold('Sir')}, ${green('Do you use typescript ⁉️')}`,
        default: false,
        name: 'isUsingTypeScript',
        when: (answers) => !answers.isCombo
    },
    {
        type: 'list',
        message: `${bold('Sir')}, ${green('Pick the framework to generate tsconfig.json for you: ⁉️')}`,
        name: 'framework',
        choices: ['react', 'node', 'nextjs'],
        when: (answers) => answers.isUsingTypeScript
    },
    {
        type: 'confirm',
        message: `${bold('Sir')}, ${green('Do you need jasmine for testing configuration ⁉️')}`,
        name: 'isUsingJasmine',
        when: (answers) => !answers.isCombo
    },
    {
        type: 'confirm',
        message: `${bold('Sir')}, ${green('Do you need eslint configuration ⁉️')}`,
        name: 'isUsingEslint',
        when: (answers) => answers.framework === 'node'
    }
];
exports.default = questions;
//# sourceMappingURL=questions.js.map