#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const inquirer_1 = require("inquirer");
const constants_1 = __importDefault(require("./constants"));
const questions_1 = __importDefault(require("./utils/questions"));
const typescript_module_1 = __importDefault(require("./modules/typescript.module"));
const prettier_module_1 = __importDefault(require("./modules/prettier.module"));
const eslint_module_1 = __importDefault(require("./modules/eslint.module"));
const node_ts_combo_module_1 = __importDefault(require("./modules/node-ts-combo.module"));
const testing_jasmine_module_1 = __importDefault(require("./modules/testing-jasmine.module"));
const run = async () => {
    const { blue, bold, red, green, white, bgRedBright } = chalk_1.default;
    console.log(`- Hey Sir, ${blue(bold(`${constants_1.default.username}`))}... here's ${green('Younes')} How can I serve you? 👨🏻‍💻`);
    console.log(bgRedBright(white('Please, make sure u use npm version > v6.x')));
    try {
        const { isCombo, isUsingPrettier, isUsingTypeScript, framework, isUsingEslint, isUsingJasmine } = await (0, inquirer_1.prompt)(questions_1.default);
        if (isCombo) {
            await (0, node_ts_combo_module_1.default)();
        }
        else {
            if (isUsingTypeScript) {
                await (0, typescript_module_1.default)(framework);
            }
            if (isUsingPrettier) {
                await (0, prettier_module_1.default)();
            }
            if (isUsingEslint) {
                await (0, eslint_module_1.default)(framework);
            }
            if (isUsingJasmine) {
                await (0, testing_jasmine_module_1.default)();
            }
            if (!isUsingTypeScript && !isUsingPrettier && !isUsingEslint && !isUsingJasmine) {
                console.log(red(`Sir, ${blue(bold(`${constants_1.default.username}`))}...I wish to help you 😂💔 `));
            }
        }
    }
    catch (error) {
        console.log(red(`Whoops!, Sir, ${blue(bold(`${constants_1.default.username}`))}... 😂💔 but ${error.stack}`));
    }
};
run();
//# sourceMappingURL=index.js.map